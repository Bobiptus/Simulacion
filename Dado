import tkinter as tk
import random
from collections import defaultdict

class DiceSimulator:
    def __init__(self, root):
        self.root = root
        self.root.title("Simulador de Dado")
        
        self.counts = defaultdict(int)
        self.total_rolls = 0
        
        self.label = tk.Label(root, text="Ingresa la cantidad de lanzamientos:", font=("Arial", 14))
        self.label.pack(pady=10)
        
        self.entry = tk.Entry(root, font=("Arial", 14))
        self.entry.pack()
        
        self.load_label = tk.Label(root, text="Cargar cara específica (1-6, opcional):", font=("Arial", 12))
        self.load_label.pack(pady=5)
        
        self.load_entry = tk.Entry(root, font=("Arial", 12))
        self.load_entry.pack()
        
        self.weight_label = tk.Label(root, text="Multiplicador de probabilidad (2-4, opcional):", font=("Arial", 12))
        self.weight_label.pack(pady=5)
        
        self.weight_entry = tk.Entry(root, font=("Arial", 12))
        self.weight_entry.pack()
        
        self.roll_button = tk.Button(root, text="Lanzar Dado", command=self.roll_dice, font=("Arial", 14))
        self.roll_button.pack(pady=10)
        
        self.result_label = tk.Label(root, text="", font=("Arial", 18, "bold"))
        self.result_label.pack()
        
        self.table_label = tk.Label(root, text="Resultados:", font=("Arial", 14))
        self.table_label.pack(pady=10)
        
        self.statusbar = tk.Label(root, text="Armando Roberto Pérez Banda")
        self.statusbar.pack(fill=tk.X, side=tk.BOTTOM, ipady=5)
        
        self.table_text = tk.Text(root, height=10, width=40, font=("Arial", 12))
        self.table_text.pack()
        self.update_table()
        
    def roll_dice(self):
        try:
            num_rolls = int(self.entry.get())
            if num_rolls <= 0:
                self.result_label.config(text="Ingresa un número válido")
                return
            
            load_face = self.load_entry.get()
            load_face = int(load_face) if load_face.isdigit() and 1 <= int(load_face) <= 6 else None
            
            weight = self.weight_entry.get()
            weight = int(weight) if weight.isdigit() and 2 <= int(weight) <= 4 else 1
            
            for _ in range(num_rolls):
                if load_face:
                    weighted_choices = [load_face] * weight + [i for i in range(1, 7) if i != load_face]
                    result = random.choice(weighted_choices)
                else:
                    result = random.randint(1, 6)
                
                self.counts[result] += 1
                self.total_rolls += 1
            
            self.result_label.config(text=f"Última tirada: {result}")
            self.update_table()
        except ValueError:
            self.result_label.config(text="Ingresa un número válido")
        
    def update_table(self):
        self.table_text.delete(1.0, tk.END)
        self.table_text.insert(tk.END, "Cara | Veces | Porcentaje\n")
        self.table_text.insert(tk.END, "----------------------------\n")
        for i in range(1, 7):
            percentage = (self.counts[i] / self.total_rolls * 100) if self.total_rolls > 0 else 0
            self.table_text.insert(tk.END, f"  {i}   |   {self.counts[i]}   |   {percentage:.2f}%\n")

if __name__ == "__main__":
    root = tk.Tk()
    app = DiceSimulator(root)
    root.mainloop()
